--- gettext-0.19/gettext-tools/woe32dll/gettextlib-exports.c	2012-12-24 21:06:44 -0500
+++ gettext-0.19/gettext-tools/woe32dll/gettextlib-exports2.c	2014-06-10 17:48:32 -0400
@@ -29,8 +29,10 @@
 VARIABLE(gl_linkedhash_list_implementation)
 VARIABLE(program_name)
 #if GNULIB_DEFINED_GETOPT
+#if !(defined _WIN32 || defined _WIN64)
 VARIABLE(rpl_optarg)
 VARIABLE(rpl_optind)
 #endif
+#endif
 VARIABLE(simple_backup_suffix)
 VARIABLE(styled_ostream_typeinfo)
--- gettext-0.19/gettext-runtime/libasprintf/vasnprintf.c	2013-07-07 08:46:48 -0400
+++ gettext-0.19/gettext-runtime/libasprintf/vasnprintf2.c	2014-06-25 23:17:59 -0400
@@ -66,8 +66,20 @@
 # endif
 #endif
 
+
 #include <locale.h>     /* localeconv() */
+
+#ifdef __MINGW32__
+#define REMOVED__USE_MINGW_ANSI_STDIO
+#undef __USE_MINGW_ANSI_STDIO
+#endif
+
 #include <stdio.h>      /* snprintf(), sprintf() */
+
+#if defined(__MINGW64_VERSION_MAJOR) && defined(REMOVED__USE_MINGW_ANSI_STDIO)
+#  define __USE_MINGW_ANSI_STDIO
+#endif
+
 #include <stdlib.h>     /* abort(), malloc(), realloc(), free() */
 #include <string.h>     /* memcpy(), strlen() */
 #include <errno.h>      /* errno */
--- gettext-0.19/gettext-runtime/libasprintf/vasnprintf.h	2012-12-04 01:28:58 -0500
+++ gettext-0.19/gettext-runtime/libasprintf/vasnprintf2.h	2014-06-25 23:14:54 -0400
@@ -64,11 +64,16 @@
                 free (output);
             }
   */
+
+#if !defined(__USE_MINGW_ANSI_STDIO) && defined(__MINGW64_VERSION_MAJOR)
+
 extern char * asnprintf (char *resultbuf, size_t *lengthp, const char *format, ...)
        __attribute__ ((__format__ (__printf__, 3, 4)));
 extern char * vasnprintf (char *resultbuf, size_t *lengthp, const char *format, va_list args)
        __attribute__ ((__format__ (__printf__, 3, 0)));
 
+#endif /* !defined(__USE_MINGW_ANSI_STDIO) && defined(__MINGW64_VERSION_MAJOR) */
+
 #ifdef __cplusplus
 }
 #endif
--- gettext-0.19/gettext-runtime/libasprintf/vasprintf.h	2012-12-04 01:28:58 -0500
+++ gettext-0.19/gettext-runtime/libasprintf/vasprintf2.h	2014-06-25 23:16:25 -0400
@@ -37,6 +37,8 @@
 extern "C" {
 #endif
 
+#if !defined(__USE_MINGW_ANSI_STDIO) && defined(__MINGW64_VERSION_MAJOR)
+
 /* Write formatted output to a string dynamically allocated with malloc().
    If the memory allocation succeeds, store the address of the string in
    *RESULT and return the number of resulting bytes, excluding the trailing
@@ -46,6 +48,8 @@
 extern int vasprintf (char **result, const char *format, va_list args)
        __attribute__ ((__format__ (__printf__, 2, 0)));
 
+#endif /* !defined(__USE_MINGW_ANSI_STDIO) && defined(__MINGW64_VERSION_MAJOR) */
+
 #ifdef __cplusplus
 }
 #endif
