--- qt-everywhere-opensource-src-5.3.0/qtbase/config.tests/unix/compile.test	2014-05-15 13:12:18 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/config.tests/unix/compile2.test	2014-07-03 14:08:37 -0400
@@ -37,14 +37,19 @@
         CXXFLAGS="$CXXFLAGS $PARAM"
         ;;
     -L*|-l*|-pthread)
-	LFLAGS="$LFLAGS $PARAM"
-	;;
+        UPDATED=`echo $PARAM | sed -e 's/\([a-xA-X]\):/\/\1/'`
+        echo "LFLAGS = $UPDATED"
+	    LFLAGS="$LFLAGS $UPDATED"
+	    ;;
     -I*)
-        INC=`echo $PARAM | sed -e 's/^-I//'`
+        INC=`echo $PARAM | sed -e 's/^-I//' -e 's/\([a-xA-X]\):/\/\1/'`
+        echo "INCLUDEPATH = $INC"
         INCLUDEPATH="$INCLUDEPATH $INC"
         ;;
     -f*|-D*)
-        CXXFLAGS="$CXXFLAGS $PARAM"
+        UPDATED=`echo $PARAM | sed -e 's/\([a-xA-X]\):/\/\1/'`
+        echo "CXXFLAGS = $UPDATED"
+        CXXFLAGS="$CXXFLAGS $UPDATED"
         ;;
     -Qoption)
 	# Two-argument form for the Sun Compiler
--- qt-everywhere-opensource-src-5.3.0/qtbase/config.tests/unix/harfbuzz/harfbuzz.pro	2014-05-15 13:12:18 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/config.tests/unix/harfbuzz/harfbuzz2.pro	2014-07-01 10:42:07 -0400
@@ -1,3 +1,3 @@
 SOURCES = harfbuzz.cpp
 CONFIG -= qt dylib
-LIBS += -lharfbuzz
+LIBS += -lharfbuzz -lgraphite2
--- qt-everywhere-opensource-src-5.3.0/qtbase/src/3rdparty/harfbuzzng.pri	2014-05-15 13:12:14 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/src/3rdparty/harfbuzzng2.pri	2014-07-01 15:43:12 -0400
@@ -2,5 +2,5 @@
     INCLUDEPATH += $$PWD/harfbuzz-ng/include
     LIBS_PRIVATE += -L$$QT_BUILD_TREE/lib -lqtharfbuzzng$$qtPlatformTargetSuffix()
 } else:contains(QT_CONFIG, system-harfbuzz) {
-    LIBS_PRIVATE += -lharfbuzz
+    LIBS_PRIVATE += -lharfbuzz -lgraphite2
 }
--- qt-everywhere-opensource-src-5.3.0/qtbase/src/widgets/kernel/qwidgetbackingstore.cpp	2014-05-15 13:12:12 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/src/widgets/kernel/qwidgetbackingstore2.cpp	2014-07-02 09:36:57 -0400
@@ -137,7 +137,7 @@
         return;
     const HDC hdc = reinterpret_cast<HDC>(hdcV);
 
-    HBRUSH brush;
+    HBRUSH brush = NULL;
     static int i = 0;
     switch (i) {
     case 0:
--- qt-everywhere-opensource-src-5.3.0/qtdeclarative/src/3rdparty/masm/wtf/PrintStream.cpp	2014-05-15 13:12:46 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtdeclarative/src/3rdparty/masm/wtf/PrintStream2.cpp	2014-07-08 01:39:44 -0400
@@ -20,7 +20,7 @@
  * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
  * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "config.h"
@@ -82,12 +82,12 @@
 
 void printInternal(PrintStream& out, long long value)
 {
-    out.printf("%lld", value);
+    out.printf("%I64d", value);
 }
 
 void printInternal(PrintStream& out, unsigned long long value)
 {
-    out.printf("%llu", value);
+    out.printf("%I64d", value);
 }
 
 void printInternal(PrintStream& out, float value)
--- qt-everywhere-opensource-src-5.3.0/qtdeclarative/examples/quick/tutorials/gettingStartedQml/filedialog/filedialog.pro	2014-05-15 13:12:42 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtdeclarative/examples/quick/tutorials/gettingStartedQml/filedialog/filedialog2.pro	2014-07-08 09:50:08 -0400
@@ -23,11 +23,12 @@
 copyfile = $$PWD/qmldir
 copydest = $$DESTDIR
 
+# Breaks MinGW Build
 # On Windows, use backslashes as directory separators
-win32: {
-    copyfile ~= s,/,\\,g
-    copydest ~= s,/,\\,g
-}
+#win32: {
+#    copyfile ~= s,/,\\,g
+#    copydest ~= s,/,\\,g
+#}
 
 # Copy the qmldir file to the same folder as the plugin binary
 QMAKE_POST_LINK += $$QMAKE_COPY $$quote($$copyfile) $$quote($$copydest) $$escape_expand(\\n\\t)
--- qt-everywhere-opensource-src-5.3.0/qtscript/src/3rdparty/javascriptcore/JavaScriptCore/JavaScriptCore.pri	2014-05-15 13:12:04 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtscript/src/3rdparty/javascriptcore/JavaScriptCore/JavaScriptCore2.pri	2014-07-09 09:35:45 -0400
@@ -13,6 +13,10 @@
     OBJECTS_DIR = obj/release
 }
 
+win32: {
+    QMAKE_CXXFLAGS = -I$$PWD/pcre $$QMAKE_CXXFLAGS
+}
+
 INCLUDEPATH = \
     $$PWD \
     $$PWD/.. \
--- qt-everywhere-opensource-src-5.3.0/qtbase/qmake/option.cpp	2014-05-15 13:12:10 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/qmake/option2.cpp	2014-07-11 11:07:37 -0400
@@ -540,7 +540,7 @@
     if (flags & Option::FixPathToNormalSeparators) {
         string = string.replace('\\', '/');
     } else if (flags & Option::FixPathToLocalSeparators) {
-#if defined(Q_OS_WIN32)
+#if defined(Q_OS_WIN32) && !defined(Q_OS_MINGW)
         string = string.replace('/', '\\');
 #else
         string = string.replace('\\', '/');
--- qt-everywhere-opensource-src-5.3.0/qtbase/src/corelib/global/qsystemdetection.h	2014-05-15 13:12:18 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/src/corelib/global/qsystemdetection2.h	2014-07-11 11:08:05 -0400
@@ -184,6 +184,9 @@
 
 #if defined(Q_OS_WIN32) || defined(Q_OS_WIN64) || defined(Q_OS_WINCE) || defined(Q_OS_WINRT)
 #  define Q_OS_WIN
+#  if defined(__MINGW__) || defined(__MINGW32__)
+#    define Q_OS_MINGW
+#  endif
 #endif
 
 #if defined(Q_OS_DARWIN)
--- qt-everywhere-opensource-src-5.3.0/qtbase/src/corelib/io/qdir.cpp	2014-05-15 13:12:18 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/src/corelib/io/qdir2.cpp	2014-07-11 10:41:43 -0400
@@ -801,7 +801,7 @@
 */
 QString QDir::toNativeSeparators(const QString &pathName)
 {
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) && !defined(Q_OS_MINGW)
     int i = pathName.indexOf(QLatin1Char('/'));
     if (i != -1) {
         QString n(pathName);
@@ -1833,7 +1833,7 @@
 */
 QChar QDir::separator()
 {
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) && !defined(Q_OS_MINGW)
     return QLatin1Char('\\');
 #else
     return QLatin1Char('/');
@@ -2091,7 +2091,7 @@
                     levels++;
                 }
             } else if (last != -1 && iwrite - last == 1) {
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) && !defined(Q_OS_MINGW)
                 eaten = (iwrite > 2);
 #else
                 eaten = true;
--- qt-everywhere-opensource-src-5.3.0/qtbase/qmake/library/qmakeglobals.cpp	2014-05-15 13:12:10 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/qmake/library/qmakeglobals2.cpp	2014-07-11 10:53:14 -0400
@@ -108,7 +108,7 @@
 #ifdef PROEVALUATOR_DEBUG
     debugLevel = 0;
 #endif
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) && !defined(Q_OS_MINGW)
     dirlist_sep = QLatin1Char(';');
     dir_sep = QLatin1Char('\\');
 #else
--- qt-everywhere-opensource-src-5.3.0/qtwebkit/Source/WebCore/xml/XSLTProcessorQt.cpp	2014-05-15 13:12:32 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtwebkit/Source/WebCore/xml/XSLTProcessorQt2.cpp	2014-12-03 16:57:05 -0500
@@ -26,6 +26,7 @@
 #include "XSLTProcessor.h"
 
 #include "Console.h"
+#include "PageConsole.h"
 #include "Document.h"
 #include "DOMWindow.h"
 #include "Frame.h"
@@ -83,7 +84,8 @@
         break;
     }
 
-    Console* console = m_document->domWindow()->console();
+    //Console* console = m_document->domWindow()->console();
+    PageConsole* console = (PageConsole*)m_document->domWindow()->console();
     console->addMessage(XMLMessageSource, level, description, sourceLocation.uri().toString(), sourceLocation.line(), sourceLocation.column());
 }
 
--- qt-everywhere-opensource-src-5.3.0/qtbase/qmake/generators/makefile.cpp	2014-05-15 13:12:10 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/qmake/generators/makefile2.cpp	2014-12-22 11:23:55 -0500
@@ -1515,10 +1515,21 @@
         if (project->isActiveConfig("object_parallel_to_source")) {
             // The source paths are relative to the output dir, but we need source-relative paths
             QString sourceRelativePath = fileFixify(sfn, qmake_getpwd(), Option::output_dir);
+
             sourceRelativePath = Option::fixPathToTargetOS(sourceRelativePath, false);
 
-            if (sourceRelativePath.startsWith(".." + Option::dir_sep))
-                sourceRelativePath = fileFixify(sourceRelativePath, FileFixifyAbsolute);
+            if (sourceRelativePath.startsWith(".." + Option::dir_sep)) {
+                QString process = fileFixify(sourceRelativePath, FileFixifyAbsolute);
+                //Avoid extremely long unnecessary paths.
+                QDir pwd = QDir(qmake_getpwd());
+                while (pwd.cdUp()) {
+					if (process.contains(pwd.absolutePath())) {
+						process=process.remove(pwd.absolutePath());
+						break;
+					}
+				}
+				sourceRelativePath=process;
+			}
 
             if (QDir::isAbsolutePath(sourceRelativePath))
                 sourceRelativePath.remove(0, sourceRelativePath.indexOf(Option::dir_sep) + 1);
@@ -1538,6 +1549,7 @@
         } else {
             dir = objdir;
         }
+
         ret.append(dir + fi.completeBaseName() + Option::obj_ext);
     }
     return ret;
--- qt-everywhere-opensource-src-5.3.0/qtbase/qmake/generators/win32/mingw_make.cpp	2014-05-15 13:12:10 -0400
+++ qt-everywhere-opensource-src-5.3.0/qtbase/qmake/generators/win32/mingw_make2.cpp	2014-12-16 16:53:25 -0500
@@ -54,10 +54,10 @@
 
 MingwMakefileGenerator::MingwMakefileGenerator() : Win32MakefileGenerator(), init_flag(false)
 {
-    if (isWindowsShell())
+    //if (isWindowsShell())
         quote = "\"";
-    else
-        quote = "'";
+    //else
+    //    quote = "'";
 }
 
 QString MingwMakefileGenerator::escapeDependencyPath(const QString &path) const
@@ -345,9 +345,34 @@
     } else {
         t << "LINKER      =        " << var("QMAKE_LINK") << endl;
         t << "LFLAGS        =        " << var("QMAKE_LFLAGS") << endl;
-        t << "LIBS        =        "
-          << var("QMAKE_LIBS").replace(QRegExp("(\\slib|^lib)")," -l") << ' '
-          << var("QMAKE_LIBS_PRIVATE").replace(QRegExp("(\\slib|^lib)")," -l") << endl;
+        t << "LIBS        =        ";
+
+        ProStringList &libs = project->values("QMAKE_LIBS");
+		for (ProStringList::ConstIterator libit = libs.begin(); libit != libs.end(); ++libit) {
+            if ((*libit).startsWith("-L")) {
+                QString lib = (*libit).mid(2).toQString();
+		        t << "-L";
+		        t << quote << lib << quote << " ";
+		    } else {
+                t << (*libit).toQString().replace(QRegExp("(\\slib|^lib)")," -l") << " ";
+			}
+        }
+
+        libs = project->values("QMAKE_LIBS_PRIVATE");
+		for (ProStringList::ConstIterator libit = libs.begin(); libit != libs.end(); ++libit) {
+            if ((*libit).startsWith("-L")) {
+                QString lib = (*libit).mid(2).toQString();
+		        t << "-L";
+		        t << quote << lib << quote << " ";
+		    } else {
+                t << (*libit).toQString().replace(QRegExp("(\\slib|^lib)")," -l") << " ";
+			}
+        }
+
+        t << endl;
+//        t << "LIBS        =        "
+//          << var("QMAKE_LIBS").replace(QRegExp("(\\slib|^lib)")," -l") << ' '
+//          << var("QMAKE_LIBS_PRIVATE").replace(QRegExp("(\\slib|^lib)")," -l") << endl;
     }
 }
 
